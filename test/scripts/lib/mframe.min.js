"use strict";angular.module("mvFramework",["ngAnimate"]),angular.module("mvFramework").directive("mvGrid",function(gridChecker){return{restrict:"A",scope:!0,replace:!0,template:'<div ng-style="blockStyles" ng-transclude></div>',transclude:!0,link:function(scope,element,attrs){scope.blockStyles={},scope.blockStyles.left=gridChecker.check(attrs.mvGrid,"left")*(100/24)+"%",scope.blockStyles.top=gridChecker.check(attrs.mvGrid,"top")*(100/24)+"%",scope.blockStyles.width=gridChecker.check(attrs.mvGrid,"width")*(100/24)+"%",scope.blockStyles.height=gridChecker.check(attrs.mvGrid,"height")*(100/24)+"%"}}}),angular.module("mvFramework").directive("mvImage",function(configFactory,$filter,gridChecker,$animate,$timeout,debugSelector,$rootScope,timerProvider,playbackManager){return{restrict:"E",replace:!0,scope:{path:"@"},templateUrl:"template/mv-image.html",link:function(scope,element,attr){function getConfig(){configFactory.getComponentConfig(scope.path).then(function(data){scope.config=data,setupConfig(),playbackManager.componentReady(timerName)})}function setupConfig(){scope.content="images/"+scope.config.params.value;angular.element(element.children()[0]);scope.containerStyles.left=gridChecker.check(scope.path,"left")*(100/24)+"%",scope.containerStyles.top=gridChecker.check(scope.path,"top")*(100/24)+"%",scope.containerStyles.width=gridChecker.check(scope.path,"width")*(100/24)+"%",scope.containerStyles.height=gridChecker.check(scope.path,"height")*(100/24)+"%";var ratioCheck=element[0].clientWidth>element[0].clientHeight;switch(scope.config.params.position){case"fit":scope.imageStyles.height=ratioCheck?"100%":"auto",scope.imageStyles.width=ratioCheck?"auto":"100%";break;case"fill":scope.imageStyles.height=ratioCheck?"auto":"100%",scope.imageStyles.width=ratioCheck?"100%":"auto";break;case"stretch":scope.imageStyles.height="100%",scope.imageStyles.width="100%";break;case"center":}var rotation=scope.config.styles.transform.value;scope.imageStyles.transform=rotation,scope.imageStyles.WebkitTransform=rotation,angular.forEach(scope.config.styles,function(style){"Rotation"!==style.name&&(scope.containerStyles[style.cssProperty]=style.value)})}function initAnimations(duration){function endAnimations(){endIntro(),endLoop(),animateOutro().then(function(){endOutro()})}function animateLoop(count){return debugSelector.debug===!0&&console.time(timerName+"Loop"),$animate.addClass(element,scope.config.animation.loop.animation+" "+scope.config.animation.loop.timingFunction+" duration-"+10*scope.config.animation.loop.duration+" iteration-count-"+count)}function animateIntro(){return debugSelector.debug===!0&&console.time(timerName+"Intro"),$animate.addClass(element,scope.config.animation.intro.animation+" "+scope.config.animation.intro.timingFunction+" duration-"+10*scope.config.animation.intro.duration+" iteration-count-1")}function animateOutro(){return debugSelector.debug===!0&&console.time(timerName+"Outro"),$timeout(function(){element.addClass("no-display")},1e3*scope.config.animation.outro.duration),$animate.addClass(element,scope.config.animation.outro.animation+" "+scope.config.animation.outro.timingFunction+" duration-"+10*scope.config.animation.outro.duration)}function endLoop(){debugSelector.debug===!0&&console.timeEnd(timerName+"Loop"),element.removeClass(scope.config.animation.intro.animation+" "+scope.config.animation.intro.timingFunction+" duration-"+10*scope.config.animation.intro.duration+" iteration-count-1")}function endIntro(){debugSelector.debug===!0&&console.timeEnd(timerName+"Intro"),element.removeClass(scope.config.animation.intro.animation+" "+scope.config.animation.intro.timingFunction+" duration-"+10*scope.config.animation.intro.duration+" iteration-count-1")}function endOutro(){element.addClass("no-display"),debugSelector.debug===!0&&console.timeEnd(timerName+"Outro")}var loopCount,loopSkip=!1;null===scope.config&&getConfig(),scope.config.animation&&(scope.config.animation.outro.duration+scope.config.animation.intro.duration>duration&&(scope.config.animation.outro.duration=1,scope.config.animation.intro.duration=1),duration-(scope.config.animation.outro.duration+scope.config.animation.intro.duration)<scope.config.animation.loop.duration&&(loopSkip=!0),loopCount=Math.floor((duration-(scope.config.animation.outro.duration+scope.config.animation.intro.duration))/scope.config.animation.loop.duration),console.log(loopCount),0===loopCount&&(loopSkip=!0),console.log(loopSkip),$timeout(function(){endAnimations()},1e3*(duration-scope.config.animation.outro.duration)),animateIntro().then(function(){endIntro(),loopSkip===!1&&animateLoop(loopCount).then(function(){endLoop()})}))}scope.config=null,scope.containerStyles={},scope.imageStyles={},scope.content=null,scope.getConfig=getConfig,scope.setupConfig=setupConfig;var timerName="image"+scope.$id;scope.getConfig();var statusChecker=scope.$watch(function(){return playbackManager.ready},function(status){status===!0&&(initAnimations(playbackManager.duration),statusChecker())})}}}),angular.module("mvFramework").run(["$templateCache",function($templateCache){$templateCache.put("template/mv-image.html",'<div class="mv-image" ng-style="containerStyles">  <div class="image-helper"><img ng-style="imageStyles" ng-src="{{content}}" alt="{{path}}"/></div></div>')}]),angular.module("mvFramework").directive("mvText",function($interval,configFactory,$filter,$timeout,fontFactor,gridChecker,$animate,$rootScope,debugSelector,timerProvider,playbackManager){return{restrict:"E",replace:!0,scope:{path:"@"},templateUrl:"template/mv-text.html",link:function(scope,element,attr){function getConfig(){configFactory.getComponentConfig(scope.path).then(function(data){scope.config=data,setupConfig(),playbackManager.componentReady(timerName)})}function resizer(){var optimumSize=Math.sqrt(element[0].clientWidth*element[0].clientHeight/scope.content.length),newSize=Math.max(Math.min(optimumSize*fontFactor.factor,scope.config.params.fontMax),scope.config.params.fontMin);scope.textStyles.fontSize=newSize+"px"}function setupConfig(){scope.content=scope.config.params.value,angular.forEach(scope.config.styles,function(style){"verticalAlign"!==style.cssProperty&&(scope.containerStyles[style.cssProperty]=style.value)}),scope.textStyles.verticalAlign=scope.config.styles.verticalAlign.value,$timeout(function(){scope.containerStyles.left=gridChecker.check(scope.path,"left")*(100/24)+"%",scope.containerStyles.top=gridChecker.check(scope.path,"top")*(100/24)+"%",scope.containerStyles.width=gridChecker.check(scope.path,"width")*(100/24)+"%",scope.containerStyles.height=gridChecker.check(scope.path,"height")*(100/24)+"%",$timeout(function(){scope.containerStyles.lineHeight=element[0].clientHeight+"px",resizer()},30)},0)}function initAnimations(duration){function endAnimations(){endIntro(),endLoop(),animateOutro().then(function(){endOutro()})}function animateLoop(count){return debugSelector.debug===!0&&console.time(timerName+"Loop"),$animate.addClass(element,scope.config.animation.loop.animation+" "+scope.config.animation.loop.timingFunction+" duration-"+10*scope.config.animation.loop.duration+" iteration-count-"+count)}function animateIntro(){return debugSelector.debug===!0&&console.time(timerName+"Intro"),$animate.addClass(element,scope.config.animation.intro.animation+" "+scope.config.animation.intro.timingFunction+" duration-"+10*scope.config.animation.intro.duration+" iteration-count-1")}function animateOutro(){return debugSelector.debug===!0&&console.time(timerName+"Outro"),$timeout(function(){element.addClass("no-display")},1e3*scope.config.animation.outro.duration),$animate.addClass(element,scope.config.animation.outro.animation+" "+scope.config.animation.outro.timingFunction+" duration-"+10*scope.config.animation.outro.duration)}function endLoop(){debugSelector.debug===!0&&console.timeEnd(timerName+"Loop"),element.removeClass(scope.config.animation.intro.animation+" "+scope.config.animation.intro.timingFunction+" duration-"+10*scope.config.animation.intro.duration+" iteration-count-1")}function endIntro(){debugSelector.debug===!0&&console.timeEnd(timerName+"Intro"),element.removeClass(scope.config.animation.intro.animation+" "+scope.config.animation.intro.timingFunction+" duration-"+10*scope.config.animation.intro.duration+" iteration-count-1")}function endOutro(){element.addClass("no-display"),debugSelector.debug===!0&&console.timeEnd(timerName+"Outro")}var loopCount,loopSkip=!1;null===scope.config&&getConfig(),scope.config.animation&&(scope.config.animation.outro.duration+scope.config.animation.intro.duration>duration&&(scope.config.animation.outro.duration=1,scope.config.animation.intro.duration=1),duration-(scope.config.animation.outro.duration+scope.config.animation.intro.duration)<scope.config.animation.loop.duration&&(loopSkip=!0),loopCount=Math.floor((duration-(scope.config.animation.outro.duration+scope.config.animation.intro.duration))/scope.config.animation.loop.duration),console.log(loopCount),0===loopCount&&(loopSkip=!0),console.log(loopSkip),$timeout(function(){endAnimations()},1e3*(duration-scope.config.animation.outro.duration)),animateIntro().then(function(){endIntro(),loopSkip===!1&&animateLoop(loopCount).then(function(){endLoop()})}))}scope.config=null,scope.containerStyles={},scope.textStyles={},scope.content=null,scope.getConfig=getConfig,scope.setupConfig=setupConfig;var timerName="text"+scope.$id;scope.getConfig();var statusChecker=scope.$watch(function(){return playbackManager.ready},function(status){status===!0&&(initAnimations(playbackManager.duration),statusChecker())})}}}),angular.module("mvFramework").run(["$templateCache",function($templateCache){$templateCache.put("template/mv-text.html",'<div class="mv-text" ng-style="containerStyles">  <span class="text-content" ng-bind="content" ng-style="textStyles"></span></div>')}]),function(){angular.module("mvFramework").service("animator",function($animateCss){this.setAnimations=function(){}})}(),angular.module("mvFramework").factory("configFactory",function(mvLoader,errorHandler,$q){function loadConfig(){var d=$q.defer();return null===scope.config||"undefined"==typeof scope.config?mvLoader.loadConfig().then(function(response){scope.config=response.data,d.resolve(response.data)}):d.resolve(scope.config),d.promise}function getComponentConfig(path){var d=$q.defer();return null===scope.config||"undefined"==typeof scope.config?loadConfig().then(function(data){scope.config=data,d.resolve(scope.config.components.filter(function(val){return val.path===path})[0])}):d.resolve(scope.config.components.filter(function(val){return val.path===path})[0]),d.promise}var scope=this;return scope.config=null,scope.getComponentConfig=getComponentConfig,scope.loadConfig=loadConfig,scope}),angular.module("mvFramework").factory("debugSelector",function(){function setDebug(option){scope.debug=option}var scope=this;return scope.debug=!1,scope.setDebug=setDebug,scope}),angular.module("mvFramework").factory("errorHandler",function(){function report(code){function error(code){function formatError(code,message){return"ERROR "+code+": "+message}switch(code){case 101:return formatError(101,"Failed to load JSON config file")}}console.log(error(code))}var scope=this;return scope.report=report,scope}),angular.module("mvFramework").factory("fontFactor",function(){function setFactor(f){scope.factor=f}var scope=this;return scope.factor=.95,scope.setFactor=setFactor,scope}),angular.module("mvFramework").service("gridChecker",function(gridProvider,gridConfig,$window,$timeout){function check(pathName,prop){function getClasses(currentClass){return currentClass.indexOf("ls")>-1?["xsls","sls","mls","lls","ls","sq","pt","lpt","mpt","spt","xspt"]:currentClass.indexOf("sq")>-1?["tsq","sq","wsq","ls","pt","lls","lpt","mls","mpt","sls","spt","xsls","xspt"]:["xspt","spt","mpt","lpt","pt","sq","ls","lls","mls","sls","xsls"]}var componentConfig=null,currentClass=gridProvider.grid["class"],classes=getClasses(currentClass);if("string"==typeof pathName?componentConfig=gridConfig.getConfig(pathName):console.log("Error: pathName is not a string"),"undefined"!=typeof componentConfig[prop][currentClass])return componentConfig[prop][currentClass];for(var k=classes.indexOf(currentClass);k<classes.length;k++)if("undefined"!=typeof componentConfig[prop][classes[k]])return componentConfig[prop][classes[k]]}gridProvider.setupGrid($window.innerHeight,$window.innerWidth);var service=this;return service.check=check,service}),angular.module("mvFramework").factory("gridConfig",function(){function setConfig(configs){function checkConfig(config){scope.components.some(function(val,index,array){return val.pathName===config.pathName?(array.splice(1,index,val),!0):void 0})||scope.components.push(config)}configs instanceof Array?configs.map(function(val){checkConfig(val)}):checkConfig(configs)}function getConfig(pathName){return scope.components.filter(function(component){return component.pathName===pathName})[0]}var scope=this;return scope.components=[],scope.setConfig=setConfig,scope.getConfig=getConfig,scope}),angular.module("mvFramework").factory("gridProvider",function(){function setupGrid(windowHeight,windowWidth){scope.grid["class"]=setRatioClass(windowWidth/windowHeight)}function setRatioClass(ratio){switch(!0){case.1>ratio:return"xspt";case.2>ratio:return"spt";case.5>ratio:return"mpt";case.64>ratio:return"lpt";case.9>ratio:return"pt";case.96>ratio:return"tsq";case 1.1>ratio:return"sq";case 1.3>ratio:return"wsq";case 1.7>ratio:return"ls";case 2>ratio:return"lls";case 3>ratio:return"mls";case 5>ratio:return"sls";case ratio>5:return"xsls"}}var scope=this;return scope.grid={},scope.setupGrid=setupGrid,scope}),angular.module("mvFramework").service("mvLoader",function($http,errorHandler){function loadConfig(){return $http.get("mframe.json").success(function(data){return data}).error(function(){errorHandler.report(101)})}var service=this;return service.loadConfig=loadConfig,service}),angular.module("mvFramework").factory("playbackManager",function($timeout,configFactory){function setReady(duration){scope.duration=duration,scope.ready=!0}var element,scope=this,components=[];return scope.duration=0,scope.ready=!1,scope.init=function(elem){configFactory.loadConfig().then(function(data){scope.config=data}),elem.style.visibility="hidden",element=elem},scope.componentReady=function(name){if(-1===components.indexOf(name)&&components.push(name),components.length===configFactory.config.components.length){var configDuration=scope.config.duration;if(2>configDuration)return;$timeout(function(){element.style.visibility="visible",setReady(configDuration),$timeout(function(){},1e3*configDuration)},300)}},scope}),angular.module("mvFramework").factory("timerProvider",function($interval,$q){function startTimer(name){scope.timers.filter(function(timer){return timer.name===name})[0].start()}function stopTimer(name){scope.timers.filter(function(timer){return timer.name===name})[0].stop()}var scope=this;return scope.stopTimer=stopTimer,scope.startTimer=startTimer,scope});